{
  "hash": "50dc9996b47a61ac9a3535e25db15294",
  "result": {
    "markdown": "---\ntitle: \"simulate: proof of concept R-package\"\ndescription: |\n  A proof of concept of parametric simulation framework to generate complex multivariate and multilevel data\ndate: 2022-02-24\nauthor:\n  - name: Emi Tanaka\n    url: https://emitanaka.org\n    affiliation: Monash University\n    affiliation_url: https://numbat.space/\ncategories: [R, simulate]\n---\n\n\n\n\nThis blog post shows a proof of concept for a simulation framework, wrapped into (undocumented) R-package `simulate`. Let's take the `penguins` data from the `palmerpenguins` package as an example data. You can see the form of the data below if you're not familiar with it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(simulate)\ntheme_set(theme_bw())\nset.seed(2022-02-24)\nstr(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [344 Ã— 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n```\n:::\n:::\n\n\nLet's now say you want to simulate a new response called `weight` which you assume is normally distributed where the mean is a function of species and variance is 10. We want to specify the mean separately by species such that Adelie, Chinstrap and Gentoo are 130kg, 200kg and 250kg respectively (These numbers are totally made up!!! And probably way heavey for a penguin?).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim1 <- penguins %>% \n  simulate(weight = sim_normal(~species, 10) %>% \n             params(\"mean\", species = c(\"Adelie\"    = 130,\n                                        \"Chinstrap\" = 200,\n                                        \"Gentoo\"    = 250)))\n```\n:::\n\n\nLet's visualise to see if the weight was simulated as expected:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sim1, aes(species, weight)) +\n  geom_violin() +\n  geom_boxplot(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](simulation-proof-of-concept_files/figure-html/sim1-plot-1.png){width=672}\n:::\n:::\n\n\nYou can make other parameters, like the standard deviation, as a function of species as well.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim2 <- penguins %>% \n  simulate(weight = sim_normal(~species, ~species) %>% \n             params(\"mean\", species = c(\"Adelie\"    = 130,\n                                        \"Chinstrap\" = 200,\n                                        \"Gentoo\"    = 250)) %>% \n             params(\"sd\", species = c(\"Adelie\"    = 10,\n                                      \"Chinstrap\" = 40,\n                                      \"Gentoo\"    = 100) ))\n```\n:::\n\n\nAnd here's the visualisation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sim2, aes(species, weight)) +\n  geom_violin() +\n  geom_boxplot(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](simulation-proof-of-concept_files/figure-html/sim2-plot-1.png){width=672}\n:::\n:::\n\n\nOkay one more before I call it a night. `sim_form` is a fixed function structure here and I'm simulating weight as a mixture distribution -- the weight is either based on the sex or the species (perhaps simulating a situation where some genes aren't expressed more based on sex sometimes, and sometimes more based on species?? These simulations are just made up.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim3 <- penguins %>% \n  simulate(weight = sim_form(~p[1] * sex + p[2] * species) %>% \n             params(species = c(\"Adelie\"    = 130,\n                                \"Chinstrap\" = 200,\n                                \"Gentoo\"    = 250),\n                    # it can be unnamed as well\n                    sex = c(40, 200),\n                    # or specify a distribution\n                    p = sim_multinominal(1, c(0.2, 0.8))))\n```\n:::\n\n\nNote: the plot below is jittered so you can see all the points. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sim3, aes(species, weight)) +\n  geom_jitter() + \n  facet_grid(sex ~ species)\n```\n\n::: {.cell-output-display}\n![](simulation-proof-of-concept_files/figure-html/sim3-plot-1.png){width=672}\n:::\n:::\n\n\nThe multivariate part is not shown but a keen user may find how this is envisioned at the moment if you dig deep into the source code... Hint: there is a `.cor` function to feed in a correlation matrix. \n",
    "supporting": [
      "simulation-proof-of-concept_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}